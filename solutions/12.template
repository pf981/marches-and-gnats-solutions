digits = 0123456789

// Place X left of LHS
BOOKEND_LEFT _ SEEK_LHS_END_RIGHT X R

// Move to beginning and seek end of LHS
INIT $digits BOOKEND_LEFT $1 L

// Seek right to find +
> SEEK_LHS_END_RIGHT $digits

SEEK_LHS_END_RIGHT + POP_LHS_0 + L

// Pop LHS with carry 0
POP_LHS_0 0 SEEK_+_RIGHT_0 _ R
POP_LHS_0 1 SEEK_+_RIGHT_1 _ R
POP_LHS_0 2 SEEK_+_RIGHT_2 _ R
POP_LHS_0 3 SEEK_+_RIGHT_3 _ R
POP_LHS_0 4 SEEK_+_RIGHT_4 _ R
POP_LHS_0 5 SEEK_+_RIGHT_5 _ R
POP_LHS_0 6 SEEK_+_RIGHT_6 _ R
POP_LHS_0 7 SEEK_+_RIGHT_7 _ R
POP_LHS_0 8 SEEK_+_RIGHT_8 _ R
POP_LHS_0 9 SEEK_+_RIGHT_9 _ R
POP_LHS_0 _ POP_LHS_0 _ L

// Pop LHS with carry 1
POP_LHS_1 0 SEEK_+_RIGHT_1 _ R
POP_LHS_1 1 SEEK_+_RIGHT_2 _ R
POP_LHS_1 2 SEEK_+_RIGHT_3 _ R
POP_LHS_1 3 SEEK_+_RIGHT_4 _ R
POP_LHS_1 4 SEEK_+_RIGHT_5 _ R
POP_LHS_1 5 SEEK_+_RIGHT_6 _ R
POP_LHS_1 6 SEEK_+_RIGHT_7 _ R
POP_LHS_1 7 SEEK_+_RIGHT_8 _ R
POP_LHS_1 8 SEEK_+_RIGHT_9 _ R
POP_LHS_1 9 SEEK_+_RIGHT_10 _ R
POP_LHS_1 _ POP_LHS_1 _ L

// Seek right with various carries
> SEEK_+_RIGHT_$digits _
> SEEK_+_RIGHT_10 _

SEEK_+_RIGHT_$digits + SEEK_RIGHT_END_$1 + R
SEEK_+_RIGHT_10 + SEEK_RIGHT_END_10 + R

// Seek to end of RHS
> SEEK_RIGHT_END_$digits $digits
> SEEK_RIGHT_END_10 $digits

// Reached end of RHS, place carry digit
SEEK_RIGHT_END_0 _ POP_RHS_0 0 L
SEEK_RIGHT_END_1 _ POP_RHS_0 1 L
SEEK_RIGHT_END_2 _ POP_RHS_0 2 L
SEEK_RIGHT_END_3 _ POP_RHS_0 3 L
SEEK_RIGHT_END_4 _ POP_RHS_0 4 L
SEEK_RIGHT_END_5 _ POP_RHS_0 5 L
SEEK_RIGHT_END_6 _ POP_RHS_0 6 L
SEEK_RIGHT_END_7 _ POP_RHS_0 7 L
SEEK_RIGHT_END_8 _ POP_RHS_0 8 L
SEEK_RIGHT_END_9 _ POP_RHS_0 9 L
SEEK_RIGHT_END_10 _ POP_RHS_10 0 L

// If you encounter number instead of +, RHS is finished
SEEK_+_RIGHT_$digits $digits SEEK_RIGHT_END_$1 $2 L
SEEK_+_RIGHT_10 $digits SEEK_RIGHT_END_10 $1 L

// Pop RHS with carry 0
POP_RHS_0 $digits ADD_$1 _ R

// Pop RHS with carry 10
POP_RHS_10 0 ADD_10 _ R
POP_RHS_10 1 ADD_11 _ R
POP_RHS_10 2 ADD_12 _ R
POP_RHS_10 3 ADD_13 _ R
POP_RHS_10 4 ADD_14 _ R
POP_RHS_10 5 ADD_15 _ R
POP_RHS_10 6 ADD_16 _ R
POP_RHS_10 7 ADD_17 _ R
POP_RHS_10 8 ADD_18 _ R
POP_RHS_10 9 ADD_19 _ R

// Add to right value - all combinations need to be explicit since template can't do arithmetic
// carry=0
ADD_0 $digits SEEK_+_LEFT_0 $1 L

// carry=1
ADD_1 0 SEEK_+_LEFT_0 1 L
ADD_1 1 SEEK_+_LEFT_0 2 L
ADD_1 2 SEEK_+_LEFT_0 3 L
ADD_1 3 SEEK_+_LEFT_0 4 L
ADD_1 4 SEEK_+_LEFT_0 5 L
ADD_1 5 SEEK_+_LEFT_0 6 L
ADD_1 6 SEEK_+_LEFT_0 7 L
ADD_1 7 SEEK_+_LEFT_0 8 L
ADD_1 8 SEEK_+_LEFT_0 9 L
ADD_1 9 SEEK_+_LEFT_1 0 L

// carry=2
ADD_2 0 SEEK_+_LEFT_0 2 L
ADD_2 1 SEEK_+_LEFT_0 3 L
ADD_2 2 SEEK_+_LEFT_0 4 L
ADD_2 3 SEEK_+_LEFT_0 5 L
ADD_2 4 SEEK_+_LEFT_0 6 L
ADD_2 5 SEEK_+_LEFT_0 7 L
ADD_2 6 SEEK_+_LEFT_0 8 L
ADD_2 7 SEEK_+_LEFT_0 9 L
ADD_2 8 SEEK_+_LEFT_1 0 L
ADD_2 9 SEEK_+_LEFT_1 1 L

// carry=3
ADD_3 0 SEEK_+_LEFT_0 3 L
ADD_3 1 SEEK_+_LEFT_0 4 L
ADD_3 2 SEEK_+_LEFT_0 5 L
ADD_3 3 SEEK_+_LEFT_0 6 L
ADD_3 4 SEEK_+_LEFT_0 7 L
ADD_3 5 SEEK_+_LEFT_0 8 L
ADD_3 6 SEEK_+_LEFT_0 9 L
ADD_3 7 SEEK_+_LEFT_1 0 L
ADD_3 8 SEEK_+_LEFT_1 1 L
ADD_3 9 SEEK_+_LEFT_1 2 L

// carry=4
ADD_4 0 SEEK_+_LEFT_0 4 L
ADD_4 1 SEEK_+_LEFT_0 5 L
ADD_4 2 SEEK_+_LEFT_0 6 L
ADD_4 3 SEEK_+_LEFT_0 7 L
ADD_4 4 SEEK_+_LEFT_0 8 L
ADD_4 5 SEEK_+_LEFT_0 9 L
ADD_4 6 SEEK_+_LEFT_1 0 L
ADD_4 7 SEEK_+_LEFT_1 1 L
ADD_4 8 SEEK_+_LEFT_1 2 L
ADD_4 9 SEEK_+_LEFT_1 3 L

// carry=5
ADD_5 0 SEEK_+_LEFT_0 5 L
ADD_5 1 SEEK_+_LEFT_0 6 L
ADD_5 2 SEEK_+_LEFT_0 7 L
ADD_5 3 SEEK_+_LEFT_0 8 L
ADD_5 4 SEEK_+_LEFT_0 9 L
ADD_5 5 SEEK_+_LEFT_1 0 L
ADD_5 6 SEEK_+_LEFT_1 1 L
ADD_5 7 SEEK_+_LEFT_1 2 L
ADD_5 8 SEEK_+_LEFT_1 3 L
ADD_5 9 SEEK_+_LEFT_1 4 L

// carry=6
ADD_6 0 SEEK_+_LEFT_0 6 L
ADD_6 1 SEEK_+_LEFT_0 7 L
ADD_6 2 SEEK_+_LEFT_0 8 L
ADD_6 3 SEEK_+_LEFT_0 9 L
ADD_6 4 SEEK_+_LEFT_1 0 L
ADD_6 5 SEEK_+_LEFT_1 1 L
ADD_6 6 SEEK_+_LEFT_1 2 L
ADD_6 7 SEEK_+_LEFT_1 3 L
ADD_6 8 SEEK_+_LEFT_1 4 L
ADD_6 9 SEEK_+_LEFT_1 5 L

// carry=7
ADD_7 0 SEEK_+_LEFT_0 7 L
ADD_7 1 SEEK_+_LEFT_0 8 L
ADD_7 2 SEEK_+_LEFT_0 9 L
ADD_7 3 SEEK_+_LEFT_1 0 L
ADD_7 4 SEEK_+_LEFT_1 1 L
ADD_7 5 SEEK_+_LEFT_1 2 L
ADD_7 6 SEEK_+_LEFT_1 3 L
ADD_7 7 SEEK_+_LEFT_1 4 L
ADD_7 8 SEEK_+_LEFT_1 5 L
ADD_7 9 SEEK_+_LEFT_1 6 L

// carry=8
ADD_8 0 SEEK_+_LEFT_0 8 L
ADD_8 1 SEEK_+_LEFT_0 9 L
ADD_8 2 SEEK_+_LEFT_1 0 L
ADD_8 3 SEEK_+_LEFT_1 1 L
ADD_8 4 SEEK_+_LEFT_1 2 L
ADD_8 5 SEEK_+_LEFT_1 3 L
ADD_8 6 SEEK_+_LEFT_1 4 L
ADD_8 7 SEEK_+_LEFT_1 5 L
ADD_8 8 SEEK_+_LEFT_1 6 L
ADD_8 9 SEEK_+_LEFT_1 7 L

// carry=9
ADD_9 0 SEEK_+_LEFT_0 9 L
ADD_9 1 SEEK_+_LEFT_1 0 L
ADD_9 2 SEEK_+_LEFT_1 1 L
ADD_9 3 SEEK_+_LEFT_1 2 L
ADD_9 4 SEEK_+_LEFT_1 3 L
ADD_9 5 SEEK_+_LEFT_1 4 L
ADD_9 6 SEEK_+_LEFT_1 5 L
ADD_9 7 SEEK_+_LEFT_1 6 L
ADD_9 8 SEEK_+_LEFT_1 7 L
ADD_9 9 SEEK_+_LEFT_1 8 L

// carry=10
ADD_10 $digits SEEK_+_LEFT_1 $1 L

// carry=11
ADD_11 0 SEEK_+_LEFT_1 1 L
ADD_11 1 SEEK_+_LEFT_1 2 L
ADD_11 2 SEEK_+_LEFT_1 3 L
ADD_11 3 SEEK_+_LEFT_1 4 L
ADD_11 4 SEEK_+_LEFT_1 5 L
ADD_11 5 SEEK_+_LEFT_1 6 L
ADD_11 6 SEEK_+_LEFT_1 7 L
ADD_11 7 SEEK_+_LEFT_1 8 L
ADD_11 8 SEEK_+_LEFT_1 9 L
ADD_11 9 SEEK_+_LEFT_2 0 L

// carry=12
ADD_12 0 SEEK_+_LEFT_1 2 L
ADD_12 1 SEEK_+_LEFT_1 3 L
ADD_12 2 SEEK_+_LEFT_1 4 L
ADD_12 3 SEEK_+_LEFT_1 5 L
ADD_12 4 SEEK_+_LEFT_1 6 L
ADD_12 5 SEEK_+_LEFT_1 7 L
ADD_12 6 SEEK_+_LEFT_1 8 L
ADD_12 7 SEEK_+_LEFT_1 9 L
ADD_12 8 SEEK_+_LEFT_2 0 L
ADD_12 9 SEEK_+_LEFT_2 1 L

// carry=13
ADD_13 0 SEEK_+_LEFT_1 3 L
ADD_13 1 SEEK_+_LEFT_1 4 L
ADD_13 2 SEEK_+_LEFT_1 5 L
ADD_13 3 SEEK_+_LEFT_1 6 L
ADD_13 4 SEEK_+_LEFT_1 7 L
ADD_13 5 SEEK_+_LEFT_1 8 L
ADD_13 6 SEEK_+_LEFT_1 9 L
ADD_13 7 SEEK_+_LEFT_2 0 L
ADD_13 8 SEEK_+_LEFT_2 1 L
ADD_13 9 SEEK_+_LEFT_2 2 L

// carry=14
ADD_14 0 SEEK_+_LEFT_1 4 L
ADD_14 1 SEEK_+_LEFT_1 5 L
ADD_14 2 SEEK_+_LEFT_1 6 L
ADD_14 3 SEEK_+_LEFT_1 7 L
ADD_14 4 SEEK_+_LEFT_1 8 L
ADD_14 5 SEEK_+_LEFT_1 9 L
ADD_14 6 SEEK_+_LEFT_2 0 L
ADD_14 7 SEEK_+_LEFT_2 1 L
ADD_14 8 SEEK_+_LEFT_2 2 L
ADD_14 9 SEEK_+_LEFT_2 3 L

// carry=15
ADD_15 0 SEEK_+_LEFT_1 5 L
ADD_15 1 SEEK_+_LEFT_1 6 L
ADD_15 2 SEEK_+_LEFT_1 7 L
ADD_15 3 SEEK_+_LEFT_1 8 L
ADD_15 4 SEEK_+_LEFT_1 9 L
ADD_15 5 SEEK_+_LEFT_2 0 L
ADD_15 6 SEEK_+_LEFT_2 1 L
ADD_15 7 SEEK_+_LEFT_2 2 L
ADD_15 8 SEEK_+_LEFT_2 3 L
ADD_15 9 SEEK_+_LEFT_2 4 L

// carry=16
ADD_16 0 SEEK_+_LEFT_1 6 L
ADD_16 1 SEEK_+_LEFT_1 7 L
ADD_16 2 SEEK_+_LEFT_1 8 L
ADD_16 3 SEEK_+_LEFT_1 9 L
ADD_16 4 SEEK_+_LEFT_2 0 L
ADD_16 5 SEEK_+_LEFT_2 1 L
ADD_16 6 SEEK_+_LEFT_2 2 L
ADD_16 7 SEEK_+_LEFT_2 3 L
ADD_16 8 SEEK_+_LEFT_2 4 L
ADD_16 9 SEEK_+_LEFT_2 5 L

// carry=17
ADD_17 0 SEEK_+_LEFT_1 7 L
ADD_17 1 SEEK_+_LEFT_1 8 L
ADD_17 2 SEEK_+_LEFT_1 9 L
ADD_17 3 SEEK_+_LEFT_2 0 L
ADD_17 4 SEEK_+_LEFT_2 1 L
ADD_17 5 SEEK_+_LEFT_2 2 L
ADD_17 6 SEEK_+_LEFT_2 3 L
ADD_17 7 SEEK_+_LEFT_2 4 L
ADD_17 8 SEEK_+_LEFT_2 5 L
ADD_17 9 SEEK_+_LEFT_2 6 L

// carry=18
ADD_18 0 SEEK_+_LEFT_1 8 L
ADD_18 1 SEEK_+_LEFT_1 9 L
ADD_18 2 SEEK_+_LEFT_2 0 L
ADD_18 3 SEEK_+_LEFT_2 1 L
ADD_18 4 SEEK_+_LEFT_2 2 L
ADD_18 5 SEEK_+_LEFT_2 3 L
ADD_18 6 SEEK_+_LEFT_2 4 L
ADD_18 7 SEEK_+_LEFT_2 5 L
ADD_18 8 SEEK_+_LEFT_2 6 L
ADD_18 9 SEEK_+_LEFT_2 7 L

// carry=19
ADD_19 0 SEEK_+_LEFT_1 9 L
ADD_19 1 SEEK_+_LEFT_2 0 L
ADD_19 2 SEEK_+_LEFT_2 1 L
ADD_19 3 SEEK_+_LEFT_2 2 L
ADD_19 4 SEEK_+_LEFT_2 3 L
ADD_19 5 SEEK_+_LEFT_2 4 L
ADD_19 6 SEEK_+_LEFT_2 5 L
ADD_19 7 SEEK_+_LEFT_2 6 L
ADD_19 8 SEEK_+_LEFT_2 7 L
ADD_19 9 SEEK_+_LEFT_2 8 L

// RHS finished cases
POP_RHS_0 + POP_LHS_0 _ L
POP_RHS_0 _ POP_LHS_0 _ L
POP_RHS_10 + POP_LHS_1 _ L
POP_RHS_10 _ POP_LHS_1 _ L

// Seek + left with carry
< SEEK_+_LEFT_0 $digits
< SEEK_+_LEFT_0 _
< SEEK_+_LEFT_1 $digits
< SEEK_+_LEFT_1 _
< SEEK_+_LEFT_2 $digits
< SEEK_+_LEFT_2 _

SEEK_+_LEFT_0 + POP_LHS_0 + L
SEEK_+_LEFT_1 + POP_LHS_1 + L
SEEK_+_LEFT_2 + POP_LHS_2 + L

// Reach X, seek right
POP_LHS_0 X FINAL_0 _ R
POP_LHS_1 X FINAL_1 _ R
POP_LHS_2 X FINAL_2 _ R

> FINAL_0 _
> FINAL_1 _

// Erase + and shift RHS right
FINAL_0 + SHUFFLE_RHS_0 _ R
FINAL_1 + SHUFFLE_RHS_1 _ R
FINAL_2 + SHUFFLE_RHS_2 _ R

// No RHS case
SHUFFLE_RHS_0 _ HALT _ R
SHUFFLE_RHS_1 _ HALT 1 R
SHUFFLE_RHS_2 _ HALT 2 R

// Shift RHS
SHUFFLE_RHS_0 $digits FIND_GAP_0 $1 R
SHUFFLE_RHS_1 $digits FIND_GAP_1 $1 R
SHUFFLE_RHS_2 $digits FIND_GAP_2 $1 R

> FIND_GAP_0 $digits
> FIND_GAP_1 $digits
> FIND_GAP_2 $digits

FIND_GAP_0 _ APPLY_CARRY_AND_CLOSE_GAP_0 _ L
FIND_GAP_1 _ APPLY_CARRY_AND_CLOSE_GAP_1 _ L
FIND_GAP_2 _ APPLY_CARRY_AND_CLOSE_GAP_2 _ L

// Apply carry and close gap
APPLY_CARRY_AND_CLOSE_GAP_0 $digits PLONK_$1 _ R

APPLY_CARRY_AND_CLOSE_GAP_1 0 PLONK_1 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 1 PLONK_2 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 2 PLONK_3 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 3 PLONK_4 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 4 PLONK_5 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 5 PLONK_6 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 6 PLONK_7 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 7 PLONK_8 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 8 PLONK_9 _ R
APPLY_CARRY_AND_CLOSE_GAP_1 9 PLONK_10 _ R

APPLY_CARRY_AND_CLOSE_GAP_2 0 PLONK_2 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 1 PLONK_3 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 2 PLONK_4 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 3 PLONK_5 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 4 PLONK_6 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 5 PLONK_7 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 6 PLONK_8 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 7 PLONK_9 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 8 PLONK_10 _ R
APPLY_CARRY_AND_CLOSE_GAP_2 9 PLONK_11 _ R

// Plonk states
PLONK_$digits _ PRE_APPLY_CARRY_AND_CLOSE_GAP_0 $1 L
PLONK_10 _ PRE_APPLY_CARRY_AND_CLOSE_GAP_1 0 L
PLONK_11 _ PRE_APPLY_CARRY_AND_CLOSE_GAP_1 1 L

PRE_APPLY_CARRY_AND_CLOSE_GAP_0 _ APPLY_CARRY_AND_CLOSE_GAP_0 _ L
PRE_APPLY_CARRY_AND_CLOSE_GAP_1 _ APPLY_CARRY_AND_CLOSE_GAP_1 _ L

APPLY_CARRY_AND_CLOSE_GAP_0 _ HALT _ L
APPLY_CARRY_AND_CLOSE_GAP_1 _ PLACE_1_AND_HALT _ R

// Prepend cases
FINAL_0 $digits HALT $1 R

FINAL_1 0 PLACE_1_AND_HALT 0 L
FINAL_1 1 PLACE_1_AND_HALT 1 L
FINAL_1 2 PLACE_1_AND_HALT 2 L
FINAL_1 3 PLACE_1_AND_HALT 3 L
FINAL_1 4 PLACE_1_AND_HALT 4 L
FINAL_1 5 PLACE_1_AND_HALT 5 L
FINAL_1 6 PLACE_1_AND_HALT 6 L
FINAL_1 7 PLACE_1_AND_HALT 7 L
FINAL_1 8 PLACE_1_AND_HALT 8 L
FINAL_1 9 PLACE_1_AND_HALT 9 L

FINAL_2 _ HALT 2 L
FINAL_2 $digits PLACE_2_AND_HALT $1 L

PLACE_1_AND_HALT _ HALT 1 L
PLACE_2_AND_HALT _ HALT 2 L